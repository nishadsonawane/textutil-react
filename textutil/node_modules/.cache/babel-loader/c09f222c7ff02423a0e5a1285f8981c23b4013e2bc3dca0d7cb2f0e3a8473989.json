{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nisha\\\\Desktop\\\\react_course\\\\textutil\\\\textutil\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport TextFormat from './components/Textformat';\nimport About from './components/About';\nimport Alert from './components/Alert';\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n  const toggle = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#001d3d\";\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n    }\n  };\n  const changeTheme = theme => {\n    setMode(theme);\n    if (theme === \"success\") {\n      document.body.style.backgroundColor = \"green\";\n    } else if (theme === \"danger\") {\n      document.body.style.backgroundColor = \"red\";\n    } else if (theme === \"warning\") {\n      document.body.style.backgroundColor = \"yellow\";\n    } else {\n      document.body.style.backgroundColor = \"gray\";\n    }\n  };\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1000);\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      mode: mode,\n      toggle: toggle,\n      changeTheme: changeTheme,\n      title: \"TextUtils\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(TextFormat, {\n            showAlert: showAlert,\n            heading: \"Enter the text to analyze\",\n            mode: mode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/about\",\n          element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"0HOcw1k7gBoZtgDKz+uDOLkRLtw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BrowserRouter","Router","Routes","Route","Navbar","TextFormat","About","Alert","useState","jsxDEV","_jsxDEV","App","_s","mode","setMode","alert","setAlert","toggle","document","body","style","backgroundColor","changeTheme","theme","showAlert","message","type","msg","setTimeout","children","title","fileName","_jsxFileName","lineNumber","columnNumber","className","path","element","heading","_c","$RefreshReg$"],"sources":["C:/Users/nisha/Desktop/react_course/textutil/textutil/src/App.js"],"sourcesContent":["import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport Navbar from './components/Navbar';\r\nimport TextFormat from './components/Textformat';\r\nimport About from './components/About';\r\nimport Alert from './components/Alert';\r\nimport { useState } from \"react\";\r\n\r\nfunction App() {\r\n  const [mode, setMode] = useState(\"light\");\r\n  const [alert, setAlert] = useState(null);\r\n\r\n  const toggle = () => {\r\n    if (mode === \"light\") {\r\n      setMode(\"dark\");\r\n      document.body.style.backgroundColor = \"#001d3d\";\r\n    } else {\r\n      setMode(\"light\");\r\n      document.body.style.backgroundColor = \"white\";\r\n    }\r\n  };\r\n\r\n  const changeTheme = (theme) => {\r\n    setMode(theme);\r\n    if (theme === \"success\") {\r\n      document.body.style.backgroundColor = \"green\";\r\n    } else if (theme === \"danger\") {\r\n      document.body.style.backgroundColor = \"red\";\r\n    } else if (theme === \"warning\") {\r\n      document.body.style.backgroundColor = \"yellow\";\r\n    } else {\r\n      document.body.style.backgroundColor = \"gray\";\r\n    }\r\n  };\r\n\r\n  const showAlert = (message, type) => {\r\n    setAlert({ msg: message, type: type });\r\n    setTimeout(() => {\r\n      setAlert(null);\r\n    }, 1000);\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <Navbar mode={mode} toggle={toggle} changeTheme={changeTheme} title=\"TextUtils\" />\r\n      <Alert alert={alert} />\r\n      <div className=\"container my-3\">\r\n        <Routes>\r\n          <Route path=\"/\" element={<TextFormat showAlert={showAlert} heading=\"Enter the text to analyze\" mode={mode} />} />\r\n          <Route path=\"/about\" element={<About />} />\r\n        </Routes>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}