{"ast":null,"code":"import{BrowserRouter as Router,Routes,Route}from'react-router-dom';import Navbar from'./components/Navbar';import TextFormat from'./components/Textformat';import About from'./components/About';import Alert from'./components/Alert';import{useState}from\"react\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[mode,setMode]=useState(\"light\");const[alert,setAlert]=useState(null);const toggle=()=>{if(mode===\"light\"){setMode(\"dark\");document.body.style.backgroundColor=\"#001d3d\";}else{setMode(\"light\");document.body.style.backgroundColor=\"white\";}};const changeTheme=theme=>{setMode(theme);if(theme===\"success\"){document.body.style.backgroundColor=\"green\";}else if(theme===\"danger\"){document.body.style.backgroundColor=\"red\";}else if(theme===\"warning\"){document.body.style.backgroundColor=\"yellow\";}else{document.body.style.backgroundColor=\"gray\";}};const showAlert=(message,type)=>{setAlert({msg:message,type:type});setTimeout(()=>{setAlert(null);},1000);};return/*#__PURE__*/_jsxs(Router,{children:[/*#__PURE__*/_jsx(Navbar,{mode:mode,toggle:toggle,changeTheme:changeTheme,title:\"TextUtils\"}),/*#__PURE__*/_jsx(Alert,{alert:alert}),/*#__PURE__*/_jsx(\"div\",{className:\"container my-3\",children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(TextFormat,{showAlert:showAlert,heading:\"Enter the text to analyze\",mode:mode})}),/*#__PURE__*/_jsx(Route,{path:\"/about\",element:/*#__PURE__*/_jsx(About,{})})]})})]});}export default App;","map":{"version":3,"names":["BrowserRouter","Router","Routes","Route","Navbar","TextFormat","About","Alert","useState","jsx","_jsx","jsxs","_jsxs","App","mode","setMode","alert","setAlert","toggle","document","body","style","backgroundColor","changeTheme","theme","showAlert","message","type","msg","setTimeout","children","title","className","path","element","heading"],"sources":["C:/Users/nisha/Desktop/react_course/textutil/textutil/src/App.js"],"sourcesContent":["import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport Navbar from './components/Navbar';\r\nimport TextFormat from './components/Textformat';\r\nimport About from './components/About';\r\nimport Alert from './components/Alert';\r\nimport { useState } from \"react\";\r\n\r\nfunction App() {\r\n  const [mode, setMode] = useState(\"light\");\r\n  const [alert, setAlert] = useState(null);\r\n\r\n  const toggle = () => {\r\n    if (mode === \"light\") {\r\n      setMode(\"dark\");\r\n      document.body.style.backgroundColor = \"#001d3d\";\r\n    } else {\r\n      setMode(\"light\");\r\n      document.body.style.backgroundColor = \"white\";\r\n    }\r\n  };\r\n\r\n  const changeTheme = (theme) => {\r\n    setMode(theme);\r\n    if (theme === \"success\") {\r\n      document.body.style.backgroundColor = \"green\";\r\n    } else if (theme === \"danger\") {\r\n      document.body.style.backgroundColor = \"red\";\r\n    } else if (theme === \"warning\") {\r\n      document.body.style.backgroundColor = \"yellow\";\r\n    } else {\r\n      document.body.style.backgroundColor = \"gray\";\r\n    }\r\n  };\r\n\r\n  const showAlert = (message, type) => {\r\n    setAlert({ msg: message, type: type });\r\n    setTimeout(() => {\r\n      setAlert(null);\r\n    }, 1000);\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <Navbar mode={mode} toggle={toggle} changeTheme={changeTheme} title=\"TextUtils\" />\r\n      <Alert alert={alert} />\r\n      <div className=\"container my-3\">\r\n        <Routes>\r\n          <Route path=\"/\" element={<TextFormat showAlert={showAlert} heading=\"Enter the text to analyze\" mode={mode} />} />\r\n          <Route path=\"/about\" element={<About />} />\r\n        </Routes>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"AAAA,OAASA,aAAa,GAAI,CAAAC,MAAM,CAAEC,MAAM,CAAEC,KAAK,KAAQ,kBAAkB,CACzE,MAAO,CAAAC,MAAM,KAAM,qBAAqB,CACxC,MAAO,CAAAC,UAAU,KAAM,yBAAyB,CAChD,MAAO,CAAAC,KAAK,KAAM,oBAAoB,CACtC,MAAO,CAAAC,KAAK,KAAM,oBAAoB,CACtC,OAASC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEjC,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGP,QAAQ,CAAC,OAAO,CAAC,CACzC,KAAM,CAACQ,KAAK,CAAEC,QAAQ,CAAC,CAAGT,QAAQ,CAAC,IAAI,CAAC,CAExC,KAAM,CAAAU,MAAM,CAAGA,CAAA,GAAM,CACnB,GAAIJ,IAAI,GAAK,OAAO,CAAE,CACpBC,OAAO,CAAC,MAAM,CAAC,CACfI,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,CAAG,SAAS,CACjD,CAAC,IAAM,CACLP,OAAO,CAAC,OAAO,CAAC,CAChBI,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,CAAG,OAAO,CAC/C,CACF,CAAC,CAED,KAAM,CAAAC,WAAW,CAAIC,KAAK,EAAK,CAC7BT,OAAO,CAACS,KAAK,CAAC,CACd,GAAIA,KAAK,GAAK,SAAS,CAAE,CACvBL,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,CAAG,OAAO,CAC/C,CAAC,IAAM,IAAIE,KAAK,GAAK,QAAQ,CAAE,CAC7BL,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,CAAG,KAAK,CAC7C,CAAC,IAAM,IAAIE,KAAK,GAAK,SAAS,CAAE,CAC9BL,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,CAAG,QAAQ,CAChD,CAAC,IAAM,CACLH,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,CAAG,MAAM,CAC9C,CACF,CAAC,CAED,KAAM,CAAAG,SAAS,CAAGA,CAACC,OAAO,CAAEC,IAAI,GAAK,CACnCV,QAAQ,CAAC,CAAEW,GAAG,CAAEF,OAAO,CAAEC,IAAI,CAAEA,IAAK,CAAC,CAAC,CACtCE,UAAU,CAAC,IAAM,CACfZ,QAAQ,CAAC,IAAI,CAAC,CAChB,CAAC,CAAE,IAAI,CAAC,CACV,CAAC,CAED,mBACEL,KAAA,CAACX,MAAM,EAAA6B,QAAA,eACLpB,IAAA,CAACN,MAAM,EAACU,IAAI,CAAEA,IAAK,CAACI,MAAM,CAAEA,MAAO,CAACK,WAAW,CAAEA,WAAY,CAACQ,KAAK,CAAC,WAAW,CAAE,CAAC,cAClFrB,IAAA,CAACH,KAAK,EAACS,KAAK,CAAEA,KAAM,CAAE,CAAC,cACvBN,IAAA,QAAKsB,SAAS,CAAC,gBAAgB,CAAAF,QAAA,cAC7BlB,KAAA,CAACV,MAAM,EAAA4B,QAAA,eACLpB,IAAA,CAACP,KAAK,EAAC8B,IAAI,CAAC,GAAG,CAACC,OAAO,cAAExB,IAAA,CAACL,UAAU,EAACoB,SAAS,CAAEA,SAAU,CAACU,OAAO,CAAC,2BAA2B,CAACrB,IAAI,CAAEA,IAAK,CAAE,CAAE,CAAE,CAAC,cACjHJ,IAAA,CAACP,KAAK,EAAC8B,IAAI,CAAC,QAAQ,CAACC,OAAO,cAAExB,IAAA,CAACJ,KAAK,GAAE,CAAE,CAAE,CAAC,EACrC,CAAC,CACN,CAAC,EACA,CAAC,CAEb,CAEA,cAAe,CAAAO,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}